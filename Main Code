/* **************************************************** COMMENTS *******************************************************************
Information Flow: 
Transmitter (the controller) --> Reciever (will be on robot) --> (Digital pin)Arduino(PWM pin) --> ESC (I will worry about this) --> Motors 

Signal Ranges:
(This part is mostly for me to keep track of the ranges of stuffn)
(Some key ranges that we will use in the future, it might look crazy now, but its very simple stuff): 
Controller values to arduino (0-255 potentiometer) -> Arduino remaps (from 0-255 to 0-180)(servo ranges) -> ESC -> motors
PWM ranges from 1000ms-2000ms for hobby servos 
PWM: analogRead/Write(0-255)
Potentiometer:(0-1023)
*/
//******************************************************* CODE *********************************************************************


ch1 = leftStick;  //challel 1 will be the Left stick, which will move the robot
ch2 = rightStick;
ch1 = 32;         //Connect channel 1 transmitter signal wire to Arduino Digital pin, no need to be PWM
ch2 = 40;
motorFL = 5;      //PWM signal from arduino to the ESC to the Front Left motor
motorFR = 6;      //To the Front Right motor
motorBL = 9;      //To the Back Left motor
motorBR = 10;     //To the Back Right motor

void setup() {
  Serial.begin(9600);         //Activating serial communications
  pinMode(ch1, INPUT);        //Because data is being sent to the arduino, its INPUT
  pinMode(ch2, INPUT);  
  pinMode(motorFL, OUTPUT);   //Sending info out from Arduino, so OUTPUT
  pinMode(motorFR, OUTPUT);
  pinMode(motorBL, OUTPUT);
  pinMode(motorBR, OUTPUT);
}

int val; 

void loop() {
val = pulseIn(ch1, HIGH, 25000);        //read the pulsewidth of channel 1 and = it to "val"
if ((val > 18150) && (val < 18210)){  //If the stick is in the middle, stop all motors (change the numbers)(change to Servo lib)
 digitalWrite(motorFL, LOW);
 digitalWrite(motorFR, LOW);
 digitalWrite(motorBL, LOW);
 digitalWrite(motorBR, LOW);
 }
 
}
